#include "Peripheral/RCC/RCC.h"
#include "Peripheral/GPIO/GPIO.h"
#include "Peripheral/SystemTimer/Systick.h"
#include "Peripheral/NVIC/NVIC.h"
#include "Peripheral/EXTI/EXTI.h"
#include "Peripheral/SystemControlBLock/SCB.h"
#include "Peripheral/Timer/Timer.h"
#include "Peripheral/USART/USART.h"
#include "Peripheral/SPI/SPI.h"
#include "Peripheral/I2C/I2C.h"
#include "Peripheral/I2C/LCD_I2C.h"
#include "Peripheral/Soft_I2C/Soft_I2C.h"


// GPIO
GPIOn *GPIO_A = (GPIOn *)ADDRESS_GPIO_A;
GPIOn *GPIO_B = (GPIOn *)ADDRESS_GPIO_B;
GPIOn *GPIO_C = (GPIOn *)ADDRESS_GPIO_C;
GPIOn *GPIO_D = (GPIOn *)ADDRESS_GPIO_D;
GPIOn *GPIO_E = (GPIOn *)ADDRESS_GPIO_E;
GPIOn *GPIO_F = (GPIOn *)ADDRESS_GPIO_F;
GPIOn *GPIO_G = (GPIOn *)ADDRESS_GPIO_G;
GPIOn *GPIO_H = (GPIOn *)ADDRESS_GPIO_H;
GPIOn *GPIO_I = (GPIOn *)ADDRESS_GPIO_I;
GPIOn *GPIO_J = (GPIOn *)ADDRESS_GPIO_J;
GPIOn *GPIO_K = (GPIOn *)ADDRESS_GPIO_K;

uint32_t* _SCB_ACTLR = (uint32_t*) ADDRESS_CSB_ACTLR;

// Timer
TIMER *TIMER1 = (TIMER *)ADDRESS_TIMER_1;
TIMER *TIMER2 = (TIMER *)ADDRESS_TIMER_2;
TIMER *TIMER3 = (TIMER *)ADDRESS_TIMER_3;
TIMER *TIMER4 = (TIMER *)ADDRESS_TIMER_4;
TIMER *TIMER5 = (TIMER *)ADDRESS_TIMER_5;
TIMER *TIMER6 = (TIMER *)ADDRESS_TIMER_6;
TIMER *TIMER7 = (TIMER *)ADDRESS_TIMER_7;
TIMER *TIMER8 = (TIMER *)ADDRESS_TIMER_8;
TIMER *TIMER9 = (TIMER *)ADDRESS_TIMER_9;
TIMER *TIMER10 = (TIMER *)ADDRESS_TIMER_10;
TIMER *TIMER11 = (TIMER *)ADDRESS_TIMER_11;
TIMER *TIMER12 = (TIMER *)ADDRESS_TIMER_12;
TIMER *TIMER13 = (TIMER *)ADDRESS_TIMER_13;
TIMER *TIMER14 = (TIMER *)ADDRESS_TIMER_14;

// UART
USARTn *UART4 = (USARTn *)ADDRESS_UART_4;
USARTn *UART5 = (USARTn *)ADDRESS_UART_5;

// USART
USARTn *USART1 = (USARTn *)ADDRESS_USART_1;
USARTn *USART2 = (USARTn *)ADDRESS_USART_2;
USARTn *USART3 = (USARTn *)ADDRESS_USART_3;
USARTn *USART6 = (USARTn *)ADDRESS_USART_6;

// SPI
SPIn *SPI1 = (SPIn*) ADDRESS_SPI_1;
SPIn *SPI2 = (SPIn*) ADDRESS_SPI_2;
SPIn *SPI3 = (SPIn*) ADDRESS_SPI_3;


// I2C
I2C *i2c1  = (I2C*) ADDRESS_I2C1;
I2C *i2c2  = (I2C*) ADDRESS_I2C2;
I2C *i2c3  = (I2C*) ADDRESS_I2C3;


